{"version":3,"sources":["highscore.js","index.js"],"names":["getHighscore","highscore","parseInt","localStorage","getItem","setHighscore","val","setItem","interval","$currentWord","document","getElementById","$textField","$time","$score","$highscore","words","currentWord","inGame","time","score","body","onload","innerText","focus","oninput","textFieldUpdate","text","value","toLowerCase","startGame","round","setInterval","endGame","increaseTime","Math","floor","random","length","clearInterval","console","log"],"mappings":";AAKA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,QAAA,kBAAA,EALA,IAAMA,EAAe,WAEZC,OADWC,SAASC,aAAaC,QAAQ,eAAiB,GAInE,QAAA,aAAA,EAAA,IAAMC,EAAe,SAACC,GACpBH,aAAaI,QAAQ,YAAaD,IADpC,QAAA,aAAA;;ACoEA,aAzEA,IAiBIE,EAjBJ,EAAA,QAAA,kBAKMC,EAAeC,SAASC,eAAe,gBACvCC,EAAaF,SAASC,eAAe,cACrCE,EAAQH,SAASC,eAAe,QAChCG,EAASJ,SAASC,eAAe,SACjCI,EAAaL,SAASC,eAAe,aAErCK,EAAQ,CAAC,MAAO,MAAO,QAAS,OAAQ,WAAY,aAAc,cAAe,aAAc,uBACjGC,EAAc,GAEdC,GAAS,EACTC,EAAO,EACPC,EAAQ,EAGZV,SAASW,KAAKC,OAAS,WACrBb,EAAac,UAAY,uBACzBX,EAAWY,QAEXZ,EAAWa,QAAUC,EAErBX,EAAWQ,WAAY,EAAvB,EAAA,iBAGF,IAAMG,EAAkB,WAChBC,IAAAA,EAAOf,EAAWgB,MAAMC,cAEzBX,GAAmB,UAATS,GAAkBG,IAG7BZ,GAAUS,IAASV,GAAac,EAAM,IAGtCD,EAAY,WAChBZ,GAAS,EACTE,EAAQ,EAGRW,EAAM,GAGNvB,EAAWwB,YAAY,WACrBb,IACAN,EAAMU,UAAYJ,EACdA,GAAQ,GACVc,KAED,MAICF,EAAQ,SAACzB,GAEbM,EAAWgB,MAAQ,GAEnBM,EAAa5B,GACbc,IACAN,EAAOS,UAAYH,EAGnBH,EAAcD,EAAMmB,KAAKC,MAAMD,KAAKE,SAAWrB,EAAMsB,SACrD7B,EAAac,UAAYN,GAIrBiB,EAAe,SAAC5B,GACpBa,GAAcb,GAGV2B,EAAU,WAEdM,cAAc/B,GAEdU,GAAS,EAGHjB,IAAAA,GAAY,EAAlB,EAAA,gBACImB,EAAQnB,IACVuC,QAAQC,IAAI,+BAEZ1B,EAAWQ,UAAYH,GACVA,EAAAA,EAAAA,cAAAA,IAIfX,EAAac,UAAY,6BACzBX,EAAWgB,MAAQ","file":"src.1133c721.js","sourceRoot":"../src","sourcesContent":["const getHighscore = () => {\n  const highscore = parseInt(localStorage.getItem('highscore')) || 0;\n  return highscore;\n}\n\nconst setHighscore = (val) => {\n  localStorage.setItem('highscore', val);\n}\n\nexport {\n  getHighscore,\n  setHighscore,\n}","import {\n  getHighscore,\n  setHighscore,\n} from './highscore.js';\n\nconst $currentWord = document.getElementById('current_word');\nconst $textField = document.getElementById('text_field');\nconst $time = document.getElementById('time');\nconst $score = document.getElementById('score')\nconst $highscore = document.getElementById('highscore')\n\nconst words = [\"one\", \"two\", \"three\", \"four\", \"computer\", \"stewardess\", \"four-twenty\", \"javascript\", \"large-headed donkey\"];\nvar currentWord = '';\n\nvar inGame = false;\nvar time = 0; // milliseconds\nvar score = 0;\nvar interval;\n\ndocument.body.onload = () => {\n  $currentWord.innerText = 'Type \"start\" to play'\n  $textField.focus();\n\n  $textField.oninput = textFieldUpdate;\n\n  $highscore.innerText = getHighscore();\n}\n\nconst textFieldUpdate = () => {\n  const text = $textField.value.toLowerCase();\n\n  if (!inGame && text === 'start') startGame();\n\n  // if word guessed correct, get an extra second\n  if (inGame && text === currentWord) round(1);\n}\n\nconst startGame = () => {\n  inGame = true;\n  score = 0;\n  \n  // 5 seconds to start\n  round(5);\n\n\n  interval = setInterval(() => {\n    time--;\n    $time.innerText = time;\n    if (time <= 0) {\n      endGame();\n    }\n  }, 1000);\n}\n\n\nconst round = (val) => {\n  // clear the textfield\n  $textField.value = \"\";\n\n  increaseTime(val);\n  score ++;\n  $score.innerText = score;\n  \n  // get random word\n  currentWord = words[Math.floor(Math.random() * words.length)]\n  $currentWord.innerText = currentWord;\n}\n\n// when word typed\nconst increaseTime = (val) => {\n  time = time + val;\n}\n\nconst endGame = () => {\n  // reset timer\n  clearInterval(interval);\n\n  inGame = false;\n  \n  // check if score more than highscore\n  const highscore = getHighscore();\n  if (score > highscore) {\n    console.log('high score has been beaten!')\n    // set new highscore\n    $highscore.innerText = score;\n    setHighscore(score);\n  }\n\n\n  $currentWord.innerText = 'Type \"start\" to play again'\n  $textField.value = '';\n}"]}