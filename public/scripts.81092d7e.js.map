{"version":3,"sources":["scripts/highscore.js","scripts/utils.js","assets/words.yml","scripts/index.js"],"names":["getHighscore","highscore","parseInt","localStorage","getItem","setHighscore","val","setItem","hide","elem","style","display","show","module","exports","interval","$startText","document","getElementById","$currentWord","$textField","$time","$scoreWrapper","$score","$highscore","currentWord","inGame","time","gameLenght","score","body","onload","innerText","focus","oninput","textFieldUpdate","placeholder","text","value","toLowerCase","startGame","trim","round","setInterval","endGame","increaseTime","words","Math","floor","random","length","clearInterval","innerHTML","blur","console","log"],"mappings":"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","file":"scripts.81092d7e.js","sourceRoot":"../src","sourcesContent":["const getHighscore = () => {\n  const highscore = parseInt(localStorage.getItem('highscore')) || 0;\n  return highscore;\n};\n\nconst setHighscore = (val) => {\n  localStorage.setItem('highscore', val);\n};\n\nexport { getHighscore, setHighscore };\n","const hide = (elem) => {\n  elem.style.display = 'none';\n};\n\nconst show = (elem) => {\n  elem.style.display = 'block';\n};\n\nexport { hide, show };\n","module.exports=[\"javascript\",\"stewardess\",\"zephyr\",\"sphinx\",\"australia\",\"integration\",\"startup\",\"difficult\",\"editor\",\"suburban\",\"assuming\",\"obstinance\",\"duck\",\"ethnicity\",\"wombat\",\"monopoly\",\"literally\",\"ironic\",\"irregardless\",\"colonel\",\"nonplussed\",\"disinterested\",\"enormity\",\"lieutenant\",\"seven\",\"keyboard\",\"juice\",\"lazy\",\"touch\",\"destination\",\"visual\",\"asset\",\"choir\",\"dvorak\",\"node\",\"deno\",\"yarn\",\"template\",\"index\",\"ignore\",\"social\",\"distance\",\"quarantine\",\"typewriter\",\"flagfalls\",\"polyphony\",\"skeuomorphism\",\"help\",\"socket\",\"now\",\"minimum\",\"language\",\"when\",\"pillow\",\"python\",\"snake\",\"banana\",\"word\",\"acceleration\",\"googol\",\"duffles\",\"fluffy\",\"daddy\",\"people\",\"which\",\"start\",\"number\",\"oh\",\"yeah\",\"why\",\"markup\",\"markdown\",\"typerapp\",\"soundboard\",\"shots\",\"pug\",\"jade\",\"normalize\",\"parcel\",\"bundler\",\"glob\",\"blob\"];","import { getHighscore, setHighscore } from './highscore.js';\nimport { hide, show } from './utils.js';\nimport words from '~/assets/words.yml';\n\nconst $startText = document.getElementById('start_text');\nconst $currentWord = document.getElementById('current_word');\nconst $textField = document.getElementById('text_field');\nconst $time = document.getElementById('time');\nconst $scoreWrapper = document.getElementById('score_wrapper');\nconst $score = document.getElementById('score');\nconst $highscore = document.getElementById('highscore');\n\nvar currentWord = '';\nvar inGame = false;\nvar time = 0;\nconst gameLenght = 10;\nvar score = 0;\nvar interval;\n\ndocument.body.onload = () => {\n  hide($currentWord);\n  $time.innerText = `${gameLenght}s`;\n\n  $textField.focus();\n  $textField.oninput = textFieldUpdate;\n  // set placeholder to \"start\"\n  $textField.placeholder = 'type \"start\"';\n\n  $highscore.innerText = getHighscore();\n\n  // only show score display when game starts\n  hide($scoreWrapper);\n};\n\nconst textFieldUpdate = () => {\n  const text = $textField.value.toLowerCase();\n\n  if (!inGame && text === 'start') startGame();\n\n  // if word guessed correct, get an extra second\n  if (inGame && text.trim() === currentWord) round(1);\n};\n\nconst startGame = () => {\n  inGame = true;\n  score = 0;\n\n  // set game length\n  $time.innerText = `${gameLenght}s`;\n\n  // start round\n  round(gameLenght);\n\n  show($currentWord);\n  hide($startText);\n\n  show($scoreWrapper);\n\n\n  interval = setInterval(() => {\n    time--;\n    $time.innerText = `${time}s`;\n    if (time <= 0) {\n      endGame();\n    }\n  }, 1000);\n};\n\n// called each round, after word typed correctly\nconst round = (val) => {\n  // clear the textfield\n  $textField.value = '';\n\n  increaseTime(val);\n  score++;\n  $score.innerText = score;\n\n  // get random word\n  currentWord = words[Math.floor(Math.random() * words.length)];\n  $currentWord.innerText = currentWord;\n  $textField.placeholder = `type \"${currentWord}\"`;\n};\n\n// when word typed correctly, time should be increased\nconst increaseTime = (val) => {\n  time = time + val;\n};\n\nconst endGame = () => {\n  // reset timer\n  clearInterval(interval);\n\n  inGame = false;\n\n  // show start text and change text\n  show($startText);\n  $startText.innerHTML = `\n    <span class=\"game-over\">Game over. </span> Type \"<b>start</b>\" to play again</span>\n  `;\n\n\n  // set placeholder to \"start\" and empty textfield\n  $textField.placeholder = 'type \"start\"';\n  $textField.value = '';\n  $textField.blur();\n\n  // check if score more than highscore\n  const highscore = getHighscore();\n  if (score > highscore) {\n    console.log('high score has been beaten!');\n    // set new highscore\n    $highscore.innerText = score;\n    setHighscore(score);\n  }\n\n  hide($currentWord);\n};\n"]}